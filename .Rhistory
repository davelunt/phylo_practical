breaks=10)
#barplot
carb = table(mtcars$carb) # create table of mtcars$carb data
barplot(carb,
main="",   # removes the title
xlab="carb", #labels x axis "carb"
ylab="Frequency",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
# table
plot(carb)
# table
plot(carb)
# table
carb
install.packages("data.table")
install.packages("dplyr")
install.packages("formattable")
install.packages("tidyr")
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
customGreen0 = "#DeF7E9"
customGreen = "#71CA97"
customRed = "#ff7f7f"
carburetors <- rbind(as.numeric(names(carb)), carb)
carburetors
carburetors <- rbind(as.numeric(carb)
carburetors <- rbind(as.numeric(carb))
rownames(carburetors) <- c("Corburetors", "Count")
carburetors
carburetors <- rbind(as.numeric(carb))
carburetors
rownames(carburetors) <- c("Corburetors", "Count")
carburetors <- rbind(as.numeric(carb))
carburetors
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
carburetors <- rbind(as.numeric(carb))
rownames(carburetors) <- c("Corburetors", "Count")
carburetors <- rbind(as.numeric(carb), carb)
rownames(carburetors) <- c("Corburetors", "Count")
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
carburetors <- rbind(as.numeric(carb))
carburetors
rownames(carburetors) <- c("Count")
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
carb
summary(carb)
summary(mtcars$carb)
head(mtcars$carb)
head(mtcars)
print(mtcars)
carburetors <- rbind(as.numeric(carb))
rownames(carburetors) <- c("Models of car with # carburetors")
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
#barplot
carb = table(mtcars$carb) # create table of mtcars$carb data
barplot(carb,
main="",   # removes the title
xlab="carb", #labels x axis "carb"
ylab="Frequency",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
### QSEC
hist(mtcars$qsec,
xlab="1/4 mile time (sec)",
ylab="Frequency",
main="",
col="green",
xlim=c(14,24),
las=1,
breaks=10)
### WT
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)") # labels y axis
### WT
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)",
col="blue") # labels y axis
### WT
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)",
col="skyblue") # labels y axis
### WT
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)",
col="skyblue".
las=1) # labels y axis
### WT
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)",
col="skyblue",
las=1) # labels y axis
formattable(carburetors)
library(formattable)
formattable(carburetors)
carburetors2 < as.data.farme(carb)
carburetors2 = as.data.farme(carb)
carburetors2 = as.data.frame(carb)
carburetors2
carburetors2 = as.data.frame(mtcars[11])
carburetors2
formattable(carburetors2)
formattable(carburetors2)
carburetors2 = as.data.frame(carb)
carburetors2
formattable(carburetors2)
formattable(carburetors2)
formattable(carburetors2)
#barplot
carb = table(mtcars$carb) # create table of mtcars$carb data
barplot(carb,
main="",   # removes the title
xlab="carb", #labels x axis "carb"
ylab="Frequency",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
barplot(carb,
main="",   # removes the title
xlab="Number of Carburetors", #labels x axis "carb"
ylab="Frequency",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
barplot(carb,
main="",   # removes the title
xlab="Number of Carburetors", #labels x axis "carb"
ylab="Models of car with # carburetors",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
# table
carb
library(gridExtra)
install.packages(gridExtra)
install.packages('gridExtra')
tall.packages('gris')
tall.packages('grid')
install.packages('grid')
library(gridExtra)
library(grid)
x <- head(mtcars$carb)
grid.table(x)
x <- head(carb)
x <- head(carb)
grid.table(x)
x <- head(mtcars)
grid.table(x)
x <- head(mtcars[11])
grid.table(x)
x <- head(mtcars[11])
grid.table(x)
gird.table(carb)
grid.table(carb)
grid.table(mtcars)
par(1,1)
grid.table(x)
grid.table(mtcars)
x <- head(mtcars[11])
par(1,1)
grid.table(x)
grid.table(mtcars)
grid.table(mtcars)
grid.table(mtcars&carb)
x <- head(mtcars[11])
par(1,1)
grid.table(x)
library(gridExtra)
library(grid)
x <- head(mtcars[11])
grid.table(x)
x <- mtcars[11]
grid.table(x)
x <- mtcars[11]
grid.table(x)
x <- summary(mtcars[11])
grid.table(x)
x <- print(mtcars[11])
grid.table(mtcars[11])
grid.table(mtcars[11])
# table
carb
grid.table(carb)
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
customGreen0 = "#DeF7E9"
customGreen = "#71CA97"
customRed = "#ff7f7f"
carburetors <- rbind(as.numeric(carb))
rownames(carburetors) <- c("Models of car with # carburetors")
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
carburetors2 = as.data.frame(carb)
carburetors2
formattable(carburetors2)
grid.table(carburetors)
carburetors
formattable(carburetors)
carburetors2 = as.data.frame(carburetors)
carburetors2
formattable(carburetors)
formattable(carburetors2)
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"))
)))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"))
))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"))))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold")
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0),)))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold")
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0)
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0)))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold")
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c", "c", "r"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"),
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"),
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"),
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
summary(mtcars[7]) #qsec
summary(mtcars[6]) #wt
summary(mtcars[11]) #carb
### WT
## r basic
boxplot(mtcars[6], # creates boxplot of wt column
xlab="Weight (wt)", # labels x axis
ylab="Tonnes (100lbs)",
col="skyblue",
las=1) # labels y axis
median(mtcars$wt)
sd(mtcars$wt)
### QSEC
## r basic
hist(mtcars$qsec,
xlab="1/4 mile time (sec)",
ylab="Frequency",
main="",
col="green",
xlim=c(14,24),
las=1,
breaks=10)
### CARB
## r baisc
carb = table(mtcars$carb) # create table of mtcars$carb data
barplot(carb,
main="",   # removes the title
xlab="Number of Carburetors", #labels x axis "carb"
ylab="Models of car with # carburetors",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
grid(nx=NA,
ny=NULL,
lty=5,
col="antiquewhite4",
lwd=1)
# table
carb
install.packages('gridExtra') # these two lines install table drawing packages
install.packages('grid')
library(gridExtra) # these two lines load the previously installed packages
library(grid)
x <- print(mtcars[11]) # this loads the carburetor data from mtcars into an object
grid.table(x) # this prints the object as a table
#Install the relevant libraries - do this one time
install.packages("data.table")
install.packages("dplyr")
install.packages("formattable")
install.packages("tidyr")
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
customGreen0 = "#DeF7E9"
customGreen = "#71CA97"
customRed = "#ff7f7f"
carburetors <- rbind(as.numeric(carb))
rownames(carburetors) <- c("Models of car with # carburetors")
colnames(carburetors) <- c("1","2","3","4","5","6")
carburetors
grid.table(carburetors)
carburetors2 = as.data.frame(carburetors)
formattable(carburetors2,
align =c("l","c","c","c","c", "c", "c"),
list(`Indicator Name` = formatter("span",
style = ~ style(color = "grey",
font.weight = "bold"),
`1`= color_tile(customGreen, customGreen0),
`2`= color_tile(customGreen, customGreen0),
`3`= color_tile(customGreen, customGreen0),
`4`= color_tile(customGreen, customGreen0),
`5`= color_tile(customGreen, customGreen0),
`6`= color_tile(customGreen, customGreen0))))
install.packages("formattable")
barplot(carb,
main="",   # removes the title
xlab="Number of Carburetors", #labels x axis "carb"
ylab="Models of car with # carburetors",   # labels y axis "frequency"
col="darkolivegreen",
width=c(0.2),
space=c(0.8),
ylim=c(0,12),
axes=FALSE)
box()
axis(side = 2,
at = c(0,1,2,3,4,5,6,7,8,9,10,11,12),
las=1)
barplot(table(iris$Species), # produce barplot
ylab = "Frequency",
xlab = "Species of iris",
las = 1,
col = "orange")
dat <- read.csv(file.choose()) # choose file via dialog box
head(dat)
## make the scatterplot as requested by the assignment
plot(dat$weight.of.insect ~ dat$body.length.of.insevct)
head(dat)
print(dat)
dat <- read.csv(file.choose()) # choose file via dialog box
head(dat)
dat <- read.csv(file.choose()) # choose file via dialog box
dat <- read.csv(file.choose()) # choose file via dialog box
head(dat)
print(dat)
dat <- read.csv(file.choose()) # choose file via dialog box
head(dat)
print(dat)
dat <- read.csv(file.choose()) # choose file via dialog box
head(dat)
print(dat)
## make the scatterplot as requested by the assignment
plot(dat$body_weight ~ dat$body_length)
str(dat)
# Calculate histogram, but do not draw it
my_other_hist = hist(mydata$El_G_2004)
setwd("../../phylo_practical/")
print('Hey there, good job in running the R print command!')
# Lets install and load Biostrings
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
library("Biostrings")
# --------------------------------------------
# R code to report on number of sequences
# in a file by using Biostrings
# --------------------------------------------
# open the data file and give it a handle ("dna" in this case)
dna = readDNAStringSet("data/ape.fas")  # using "=" or "<-" to assign variables is mostly down to preference, but "=" is faster
# assign number of sequences to variable
count = length(dna)
# print the results in a readable format
print("The file contained ", count, " rec
